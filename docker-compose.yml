version: '3.9'

volumes:
  db_data:
  kafka_data:

services:
  db:
    container_name: postgres
    image: postgres:16-bullseye
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5150:5432"
    environment:
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
    networks:
      - app_network

  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    hostname: kafka
    restart: always
    ports:
      - "9092:9092"
    env_file:
      - ./kafka/.env
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - app_network
  device_mock:
    build: 
      context: ./devices_mock
      dockerfile: Dockerfile
    container_name: device_mock
    restart: always
    networks:
      - app_network
  consumer:
    build: 
      context: ./telemetry_consumer
      dockerfile: Dockerfile
    container_name: telemetry_consumer
    restart: always
    volumes:
      - ./telemetry_consumer/logs:/app/logs
    networks:
      - app_network
  producer:
    build: 
      context: ./telemetry_producer
      dockerfile: Dockerfile
    container_name: telemetry_producer
    restart: always
    volumes:
      - ./telemetry_producer/logs:/app/logs
    networks:
      - app_network
  api:
    build: 
      context: ./monitor_api
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    container_name: monitor_api
    restart: always
    networks:
      - app_network

  ui:
    build: 
      context: ./monitor
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    container_name: monitor_ui
    restart: always
    networks:
      - app_network

networks:
  app_network:
    name: app_network
    driver: bridge